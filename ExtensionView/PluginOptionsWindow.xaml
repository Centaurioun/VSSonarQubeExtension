<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ViewModel="clr-namespace:ExtensionViewModel.ViewModel;assembly=ExtensionViewModel" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:SampleData="clr-namespace:Expression.Blend.SampleData.SampleDataForButtons" mc:Ignorable="d" x:Class="ExtensionView.PluginOptionsWindow"
        Title="PluginOptionsWindow" Height="300" Width="auto" Background="#FFD6D7D6" BorderThickness="1" Visibility="Visible" Opacity="0.95">
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="StylesAndTemplates.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<SampleData:SampleDataForButtons x:Key="SampleDataForButtons" d:IsDataSource="True"/>
			<ViewModel:PluginsOptionsModel x:Key="PluginsOptionsModelDataSource" d:IsDataSource="True"/>
		</ResourceDictionary>
	</Window.Resources>
	<Window.DataContext>
		<Binding Source="{StaticResource PluginsOptionsModelDataSource}"/>
	</Window.DataContext>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="34*"/>
			<RowDefinition Height="30"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="auto" MinWidth="196"/>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
		<Border>
			<ListBox ItemsSource="{Binding AvailablePluginsCollection}" SelectedItem="{Binding SelectedPluginItem}" BorderBrush="{x:Null}" Background="Transparent" Margin="0,1,0,-1"/>
		</Border>
		<GroupBox Grid.Column="1" Header="{Binding SelectedPluginItem}" BorderBrush="Black" Content="{Binding OptionsInView}" Visibility="{Binding IsPluginsEnable, Converter={StaticResource Bool2VisibilityConverter}}"/>
		<GroupBox Grid.Column="1" Header="{Binding SelectedPluginItem}" BorderBrush="Black" Visibility="{Binding IsLicenseEnable, Converter={StaticResource Bool2VisibilityConverter}}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="34*"/>
					<RowDefinition Height="25"/>
					<RowDefinition Height="30"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="227*"/>
					<ColumnDefinition Width="221*"/>
					<ColumnDefinition Width="102"/>
				</Grid.ColumnDefinitions>
				<DataGrid Grid.Row="0" Grid.ColumnSpan="3" SelectedItem="{Binding SelectedLicense}" ItemsSource="{Binding AvailableLicenses}" Visibility="{Binding IsLicenseEnable, Converter={StaticResource Bool2VisibilityConverter}}" AutoGenerateColumns="False" VerticalScrollBarVisibility="Visible" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True" GridLinesVisibility="None" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" RowBackground="Transparent" RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" ColumnHeaderHeight="20" HeadersVisibility="Column" RowHeaderWidth="0" d:DataContext="{d:DesignData /SampleData/SampleDataForButtons/SampleDataForButtons.xaml}">
					<DataGrid.Columns>
						<DataGridTextColumn Binding="{Binding IsValid}" Header="Valid   "/>
						<DataGridTextColumn Binding="{Binding ProductId}" Header="Product   "/>
						<DataGridTextColumn Binding="{Binding UserId}" Header="User   "/>
						<DataGridTextColumn Binding="{Binding LicenseData.ExpirationDate}" Header="Expire Date   "/>
						<DataGridTextColumn Binding="{Binding LicenseData.LicenseType}" Header="Type   "/>
						<DataGridTextColumn Binding="{Binding LicenseData.Name}" Header="Name   "/>
						<DataGridTextColumn Binding="{Binding LicenseData.UserId}" Header="License Id   "/>
						<DataGridTextColumn Binding="{Binding ServerId}" Header="Server ID   "/>
					</DataGrid.Columns>
				</DataGrid>
				<Label Grid.Row="2" Grid.ColumnSpan="3" Content="{Binding ErrorMessage}" />
				<Button x:Name="GenerateTokenButton" Content="Generate Token" Visibility="{Binding IsGenTokenEnable, Converter={StaticResource Bool2VisibilityConverter}}" Grid.Column="2" Grid.Row="1" Template="{DynamicResource SquareButtonTemplate}" Command="{Binding ControlCommand}" CommandParameter="{Binding Content, ElementName=GenerateTokenButton}" d:DataContext="{d:DesignData /SampleData/SampleDataForButtons/SampleDataForButtons.xaml}" ToolTip="Copy Past Token and Fill the user property in the SonarQube server"/>				
				<TextBox Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Text="{Binding GeneratedToken}" Visibility="{Binding IsGenTokenEnable, Converter={StaticResource Bool2VisibilityConverter}}" d:DataContext="{d:DesignData /SampleData/SampleDataForButtons/SampleDataForButtons.xaml}"/>
			</Grid>
		</GroupBox>
		<Grid Grid.Column="1" Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="100"/>
				<ColumnDefinition Width="100"/>
				<ColumnDefinition Width="263*"/>
				<ColumnDefinition Width="100"/>
			</Grid.ColumnDefinitions>
			<Button x:Name="OkButton" Content="Save and Exit" Command="{Binding ControlCommand}" CommandParameter="{Binding Content, ElementName=OkButton}" Template="{DynamicResource SquareButtonTemplate}"/>
			<Button x:Name="ApplyButton" Content="Apply" Grid.Column="1" Command="{Binding ControlCommand}" CommandParameter="{Binding Content, ElementName=ApplyButton}" Template="{DynamicResource SquareButtonTemplate}"/>
			<Button x:Name="CancelButton" Content="Cancel and Exit" Grid.Column="3" Command="{Binding ControlCommand}" CommandParameter="{Binding Content, ElementName=CancelButton}" Template="{DynamicResource SquareButtonTemplate}"/>			
		</Grid>
		<ToggleButton Content="Licenses" Grid.Row="1" Template="{DynamicResource SquareToggleButtonTemplate}" IsChecked="{Binding IsLicenseEnable}"/>        
	</Grid>
</Window>
