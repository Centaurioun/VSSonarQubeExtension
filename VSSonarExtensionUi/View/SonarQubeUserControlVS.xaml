<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:viewModel="clr-namespace:VSSonarExtensionUi.ViewModel"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns:analysis="clr-namespace:VSSonarExtensionUi.ViewModel.Analysis"
	xmlns:analysisView="clr-namespace:VSSonarExtensionUi.View.Analysis"
	mc:Ignorable="d"
	x:Class="VSSonarExtensionUi.View.SonarQubeUserControlVs"
	x:Name="UserControl"
	d:DesignWidth="640" d:DesignHeight="369.553">

    <UserControl.Resources>
        <ResourceDictionary>
                       
            <ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/VSSonarExtensionUi;component/Styles/Styles.xaml" />

				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

				<ResourceDictionary Source="pack://application:,,,/VSSonarExtensionUi;component/Resources/Icons.xaml" />
                <ResourceDictionary Source="/VSSonarExtensionUi;component/Styles/ButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
                                   
            <DataTemplate DataType="{x:Type analysis:ServerViewModel}">
                <analysisView:ServerView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type analysis:LocalViewModel}">
                <analysisView:LocalView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type analysis:IssuesSearchViewModel}">
                <analysisView:IssueSearchView/>
            </DataTemplate>

        	<DataTemplate x:Key="ProjectSelectionComboBoxDataTemplate">
                <StackPanel>
                    <TextBlock Text="{Binding Name}">
                    <TextBlock.Style>
                        <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBranch}" Value="True">
                                <Setter Property="TextBlock.Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                        </Style>
                    </TextBlock.Style>

                    </TextBlock>
                </StackPanel>
            </DataTemplate>
            
      <VisualBrush x:Key="FailBrush">Red</VisualBrush>
        <VisualBrush x:Key="PassBrush">Green</VisualBrush>

            <Style x:Key="ColorRectangleStyle" TargetType="Rectangle">
                <Setter Property="Fill" Value="Green"/>
                <Style.Triggers>
                <DataTrigger Binding="{Binding ErrorIsFound}" Value="False">
                    <Setter Property="Fill" Value="{StaticResource PassBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ErrorIsFound}" Value="True">
                    <Setter Property="Fill" Value="{StaticResource FailBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
            
            
        </ResourceDictionary>
    </UserControl.Resources>
            
    <UserControl.Background>
   <SolidColorBrush Color="{Binding BackGroundColor}"/>
</UserControl.Background>

    <UserControl.Foreground>
   <SolidColorBrush Color="{Binding ForeGroundColor}"/>
</UserControl.Foreground>

    <DockPanel LastChildFill="True" >

        <DockPanel LastChildFill="True" DockPanel.Dock="Bottom">
            <StackPanel DockPanel.Dock="Bottom">
                <StatusBar  Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" >
                    <StatusBarItem HorizontalAlignment="Left">
                        <Border BorderBrush="Black" BorderThickness="1">
                            <Rectangle Width="15" Height="15" Style="{StaticResource ColorRectangleStyle}" ToolTip="{Binding ErrorMessageTooltip}"/>
                        </Border>
                    </StatusBarItem>

                    <StatusBarItem  HorizontalAlignment="Left">
                        <TextBlock Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Text="{Binding StatusMessage, FallbackValue=messsageaslkdjalksjakjskdjaskda}"></TextBlock>
                    </StatusBarItem>

                    <StatusBarItem HorizontalAlignment="Right">
                        
                        <StackPanel Orientation="Horizontal">
                            <Border ToolTip="New issues have been added during session. Press button and go to local analysis mode.">
                                <StackPanel Orientation="Horizontal">
                                    <Button Width="30"
                                      Height="30"
                                      Style="{DynamicResource MetroCircleButtonStyle}"  Command="{Binding ShowNewLocalIssuesCommand}" >
                                        <ContentControl>
                                            <ContentControl.Style>
                                                <Style TargetType="{x:Type ContentControl}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=NewIssuesFound}" Value="True">
                                                            <Setter Property="Content" >
                                                                <Setter.Value>
                                                                    <Rectangle Fill="Red" Width="10" Height="10">
                                                                        <Rectangle.Resources>
                                                                            <SolidColorBrush x:Key="BlackBrush" Color="Black" />
                                                                        </Rectangle.Resources>
                                                                        <Rectangle.OpacityMask>
                                                                            <VisualBrush Visual="{StaticResource appbar_bug}" Stretch="Fill" />
                                                                        </Rectangle.OpacityMask>
                                                                    </Rectangle>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=NewIssuesFound}" Value="False">
                                                            <Setter Property="Content" >
                                                                <Setter.Value>
                                                                    <Rectangle Fill="Green" Width="10" Height="10">
                                                                        <Rectangle.Resources>
                                                                            <SolidColorBrush x:Key="BlackBrush" Color="Black" />
                                                                        </Rectangle.Resources>
                                                                        <Rectangle.OpacityMask>
                                                                            <VisualBrush Visual="{StaticResource appbar_check}" Stretch="Fill" />
                                                                        </Rectangle.OpacityMask>
                                                                    </Rectangle>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentControl.Style>
                                        </ContentControl>
                                        
                                    </Button>
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding NumberNewIssues, FallbackValue=100}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" />
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="   " Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" />
                                </StackPanel>
                            </Border>

                            <Menu x:Name="MainMenuIssues" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" >
                                <MenuItem x:Name="PluginsMenu" Header="Tools" ItemsSource="{Binding ToolsProvidedByPlugins}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="RightToLeft">
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Foreground" Value="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}"/>
                                            <Setter Property="Background" Value="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}"/>
                                            <Setter Property="Command" Value="{Binding ToolSwitchCommand}"  />
                                            <Setter Property="IsEnabled" Value="{Binding IsAssociated}"  />
                                            <Setter Property="CommandParameter" Value="{Binding Header, RelativeSource={RelativeSource Self}}" />
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                            </Menu>
                            <StatusBarItem>
                                <ToggleButton Width="30"
                                      Height="30"
                                      Margin="0, -6, 0, 0"
                                      Style="{DynamicResource MetroCircleToggleButtonStyle}"  Command="{Binding ConnectCommand}" IsChecked="{Binding IsConnected}">
                                    <ToggleButton.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Connect" Command="{Binding ConnectedToServerCommand}" IsEnabled="{Binding IsConnected, Converter={StaticResource BooleanInverter}}"/>
                                            <MenuItem Header="Disconnect" Command="{Binding DisconnectToServerCommand}" IsEnabled="{Binding IsConnected}"/>
                                        </ContextMenu>
                                    </ToggleButton.ContextMenu>
                                    <Rectangle Width="15"
                                   Height="15"
                                   Fill="{Binding  ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill"
                                             Visual="{StaticResource appbar_connect}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </ToggleButton>
                            </StatusBarItem>
                            <StatusBarItem>
                                <ToggleButton Width="30"
                                      Height="30"
                                      Margin="0, -6, 0, 0"
                                      ToolTip="Show Project Options and Association"
                                      Style="{DynamicResource MetroCircleToggleButtonStyle}"  IsChecked="{Binding ShowRightFlyout}" IsEnabled="True">
                                    <ContentControl>
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=ShowRightFlyout}" Value="True">
                                                        <Setter Property="Content" >
                                                            <Setter.Value>
                                                                <Rectangle Fill="{Binding  ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Width="10" Height="10">
                                                                    <Rectangle.Resources>
                                                                        <SolidColorBrush x:Key="BlackBrush" Color="Black" />
                                                                    </Rectangle.Resources>
                                                                    <Rectangle.OpacityMask>
                                                                        <VisualBrush Visual="{StaticResource appbar_chevron_right}" Stretch="Fill" />
                                                                    </Rectangle.OpacityMask>
                                                                </Rectangle>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=ShowRightFlyout}" Value="False">
                                                        <Setter Property="Content" >
                                                            <Setter.Value>
                                                                <Rectangle Fill="{Binding  ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Width="10" Height="10">
                                                                    <Rectangle.Resources>
                                                                        <SolidColorBrush x:Key="BlackBrush" Color="Black" />
                                                                    </Rectangle.Resources>
                                                                    <Rectangle.OpacityMask>
                                                                        <VisualBrush Visual="{StaticResource appbar_chevron_left}" Stretch="Fill" />
                                                                    </Rectangle.OpacityMask>
                                                                </Rectangle>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </ToggleButton>
                            </StatusBarItem>
                        </StackPanel>
                    </StatusBarItem>
                </StatusBar>

                <controls:MetroProgressBar DockPanel.Dock="Bottom"  Grid.Row="2" IsIndeterminate="{Binding IsExtensionBusy}"
                                       Value="{Binding ElementName=horizSlider, Path=Value}"
                                       ToolTip="{Binding BusyToolTip}"
                                       Foreground="{DynamicResource AccentColorBrush}" Background="{Binding BackGroundColor}"/>
            </StackPanel>
        </DockPanel>

        <DockPanel HorizontalAlignment="Stretch" LastChildFill="True">

            <controls:FlyoutsControl DockPanel.Dock="Right">
                <controls:Flyout Header="Project Options" Position="Right" Width="{Binding SizeOfFlyout, FallbackValue=250}" IsOpen="{Binding ShowRightFlyout, FallbackValue=True}" >
                    <controls:Flyout.Resources>
                        <Style TargetType="{x:Type controls:Flyout}" >
                            <Setter Property="HeaderTemplate" Value="{StaticResource CustomFlyoutHeaderTemplateRight}" />
                        </Style>
                    </controls:Flyout.Resources>
                    <DockPanel LastChildFill="True">

                        <GroupBox DockPanel.Dock="Bottom" Header="Status">
                            <TextBlock Height="50" TextWrapping="Wrap"  Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}"
                                Text="{Binding StatusMessageAssociation, FallbackValue=asdas;dkljasl;kjdasl;kj}"/>
                        </GroupBox>

                        <Border Height="30" BorderBrush="Black" BorderThickness="1"  DockPanel.Dock="Bottom">
                            <Button Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}"
                                Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}"
                                Content="Provision Project" ToolTip="Create project in server before analysis, SQ 5.2 or higher required." Command="{Binding ProvisionProjectCommand}" IsEnabled="{Binding CanProvision}"  />
                        </Border>
                        
                        <Border Height="30" BorderBrush="Black" BorderThickness="1"  DockPanel.Dock="Bottom">
                            <Button Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}"
                                Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}"
                                Content="Associate" Command="{Binding AssignProjectCommand}"  />
                        </Border>

                          
                        <Grid DockPanel.Dock="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="31"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="125"/>
                                <ColumnDefinition Width="125"/>
                            </Grid.ColumnDefinitions>

                            <ComboBox Name="ProjectsBox" Grid.ColumnSpan="2" Grid.Row="0"
                                  Style="{DynamicResource VirtualisedMetroComboBox}"
                                  TextSearch.TextPath="Name"
                                  controls:TextBoxHelper.Watermark="Name"
                                  IsEditable="True"
                                  SelectedItem="{Binding SelectedProjectInView, Mode=TwoWay}"
                                  ItemsSource="{Binding AvailableProjects}"
                                  MaxDropDownHeight="125"
                                  ItemTemplate="{DynamicResource ProjectSelectionComboBoxDataTemplate}"/>

                            <ComboBox Name="BranchesBox" Grid.ColumnSpan="2" Grid.Row="1" Visibility="{Binding SelectedProjectInView.IsBranch, Converter={StaticResource BoolToVis}}"
                                          Style="{DynamicResource VirtualisedMetroComboBox}"
                                          TextSearch.TextPath="Name"
                                          IsEnabled="{Binding SelectedProjectInView.IsBranch}"
                                          controls:TextBoxHelper.Watermark="Branch"
                                          IsEditable="True"
                                          SelectedItem="{Binding SelectedBranchProject, Mode=TwoWay}"
                                          ItemsSource="{Binding SelectedProjectInView.BranchResources}"
                                          MaxDropDownHeight="125"
                                          ItemTemplate="{DynamicResource ProjectSelectionComboBoxDataTemplate}" Height="31" VerticalAlignment="Top"/>

                            <TextBlock ToolTip="This is the project name"  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding SelectedProjectName}"></TextBlock>
                            <TextBlock ToolTip="This is the project key"  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding SelectedProjectKey}"></TextBlock>
                            <TextBlock ToolTip="This is the project version"  Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding SelectedProjectVersion}"></TextBlock>

                        </Grid>
                    </DockPanel>
                </controls:Flyout>
            </controls:FlyoutsControl>

            <TabControl controls:TabControlHelper.IsUnderlined="True" x:Name="TabControlViews" ItemsSource="{Binding SonarQubeViews}" SelectedItem="{Binding SelectedViewModel}" TabStripPlacement="Bottom" >
                <TabControl.Resources>
                    <Style TargetType="TabItem" BasedOn="{StaticResource MetroTabItem}">
                        <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="12" />
                        <Setter Property="controls:TabControlHelper.IsUnderlined" Value="True" />
                    </Style>
                </TabControl.Resources>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Header}"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding ElementName=TabControlViews, Path=SelectedItem}" Foreground="{Binding ForeGroundColor, Converter={StaticResource ColorToBrushConverter}}" Background="{Binding BackGroundColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </DockPanel>
    </DockPanel>
</UserControl>